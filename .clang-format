# General
#########

# The style used for all options not specifically set in the configuration.
# This option is supported only in the clang-format configuration (both within -style='{...}' and the .clang-format file).
# Possible values:
#   LLVM A style complying with the LLVM coding standards
#   Google A style complying with Google’s C++ style guide
#   Chromium A style complying with Chromium’s style guide
#   Mozilla A style complying with Mozilla’s style guide
#   WebKit A style complying with WebKit’s style guide
BasedOnStyle: Google

# TabWidth (unsigned)
# The number of columns used for tab stops.
TabWidth: 2

# IndentWidth (unsigned)
# The number of columns to use for indentation.
IndentWidth: 2

# UseTab (UseTabStyle)
# The way to use tab characters in the resulting file.
# Possible values:
#   UT_Never (in configuration: Never) Never use tab.
#   UT_ForIndentation (in configuration: ForIndentation) Use tabs only for indentation.
#   UT_Always (in configuration: Always) Use tabs whenever we need to fill whitespace that spans at least from one tab stop to the next one.
UseTab: Never

# Standard (LanguageStandard)
# Format compatible with this standard, e.g. use A<A<int> > instead of A<A<int>> for LS_Cpp03.
# Possible values:
#   LS_Cpp03 (in configuration: Cpp03) Use C++03-compatible syntax.
#   LS_Cpp11 (in configuration: Cpp11) Use features of C++11 (e.g. A<A<int>> instead of A<A<int> >).
#   LS_Auto (in configuration: Auto) Automatic detection based on the input.
Standard: Cpp11

# ColumnLimit (unsigned)
# The column limit.
# A column limit of 0 means that there is no column limit. In this case, clang-format will respect the input’s line breaking decisions within statements unless they contradict other rules.
ColumnLimit: 80
